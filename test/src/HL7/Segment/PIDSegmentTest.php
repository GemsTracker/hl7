<?php

namespace Gems\HL7\Segment;

use Gems\HL7\Test\TestAbstract;
use const TEST_DIR;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-02-12 at 09:06:41.
 */
class PIDSegmentTest extends TestAbstract
{

    /**
     * @var PIDSegment
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        parent::setUp();

        $file         = TEST_DIR . '/resources/orm.txt';
        $message      = $this->_getMessageFromFile($file);
        $pids         = $message->getSegmentsByName('PID');
        $this->object = $pids[0];
    }

    /**
     * @covers Gems\HL7\Segment\PIDSegment::getPatientId
     */
    public function testGetPatientIdValue()
    {
        // Only left for backward compatibility, should be null
        $this->assertEquals(null, $this->object->getPatientId()->getId());
    }

    /**
     * @covers Gems\HL7\Segment\PIDSegment::getPatientIdentifierList
     */
    public function testGetPatientIdentifierListType()
    {
        $this->assertInternalType('array', $this->object->getPatientIdentifierList());
    }

    /**
     * @covers Gems\HL7\Segment\PIDSegment::getPatientIdentifierList
     */
    public function testGetPatientIdentifierListContent()
    {
        $records = $this->object->getPatientIdentifierList();
        $this->assertInstanceOf('Gems\HL7\Type\CX', $records[0]);
    }

    /**
     * @covers Gems\HL7\Segment\PIDSegment::getPatientIdentifierList
     */
    public function testGetPatientIdentifierListPIValue()
    {
        $id = $this->object->getPatientIdentifierByIdentifier('PI')->getId();

        $this->assertEquals('1001303', $id);
    }

    public function testGetPhoneHomeNumber()
    {
        $homeNr = $this->object->getPhoneHome();
        $this->assertEquals('0106565656', $homeNr->getPhoneNumber());
    }

    public function testGetBirthDateTime()
    {
        $this->assertEquals('19700115', $this->object->getBirthDateTime()->getDate());
    }

    public function testGetDeathDateTime()
    {
        $this->assertEquals(null, $this->object->getDeathDateTime()->getDate());
    }

}
